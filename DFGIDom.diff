Index: JavaScriptCore/ChangeLog
===================================================================
--- JavaScriptCore/ChangeLog	(revision 124780)
+++ JavaScriptCore/ChangeLog	(working copy)
@@ -1,3 +1,24 @@
+2012-08-06  Immediate Dominators Relation  <karapetyan.nare@gmail.com>
+
+        Add immediate dominators information in Dominators class
+        Need the bug URL (OOPS!).
+
+        Reviewed by NOBODY (OOPS!).
+
+        Add JSC::DFG::Dominators::buildIDomRealtion function, which save in m_resultsIDom Idom information
+
+        * dfg/DFGDominators.cpp:
+        (JSC::DFG::Dominators::compute):
+        (JSC::DFG::Dominators::buildIDomRelation):
+        (DFG):
+        * dfg/DFGDominators.h:
+        (Dominators):
+        (JSC::DFG::Dominators::isIDomChilds):
+        * dfg/DFGDriver.cpp:
+        (JSC::DFG::compile):
+        * dfg/DFGGraph.cpp:
+        (JSC::DFG::Graph::dumpBlockHeader):
+
 2012-08-06  Carlos Garcia Campos  <cgarcia@igalia.com>
 
         Unreviewed. Fix make distcheck.
Index: Source/JavaScriptCore/dfg/DFGDominators.h
===================================================================
--- Source/JavaScriptCore/dfg/DFGDominators.h	(revision 124776)
+++ Source/JavaScriptCore/dfg/DFGDominators.h	(working copy)
@@ -43,6 +43,7 @@
     ~Dominators();
     
     void compute(Graph& graph);
+    void buildIDomRelation(Graph& graph);
     void invalidate()
     {
         m_valid = false;
@@ -55,7 +56,11 @@
     }
     
     bool isValid() const { return m_valid; }
-    
+    bool isIDomChilds(BlockIndex from, BlockIndex to) const    
+    {
+        ASSERT(isValid());
+        return m_resultsIDom[to].get(from);
+    }
     bool dominates(BlockIndex from, BlockIndex to) const
     {
         ASSERT(isValid());
@@ -68,6 +73,8 @@
     Vector<FastBitVector> m_results;
     FastBitVector m_scratch;
     bool m_valid;
+
+    Vector<FastBitVector> m_resultsIDom;
 };
 
 } } // namespace JSC::DFG
Index: Source/JavaScriptCore/dfg/DFGDominators.cpp
===================================================================
--- Source/JavaScriptCore/dfg/DFGDominators.cpp	(revision 124776)
+++ Source/JavaScriptCore/dfg/DFGDominators.cpp	(working copy)
@@ -48,11 +48,14 @@
     ASSERT(graph.m_blocks[0]->m_predecessors.isEmpty());
     
     unsigned numBlocks = graph.m_blocks.size();
-    
+
     if (numBlocks > m_results.size()) {
+        m_resultsIDom.grow(numBlocks);
         m_results.grow(numBlocks);
-        for (unsigned i = numBlocks; i--;)
+        for (unsigned i = numBlocks; i--;){
             m_results[i].resize(numBlocks);
+            m_resultsIDom[i].resize(numBlocks);
+    }
         m_scratch.resize(numBlocks);
     }
     
@@ -85,7 +88,7 @@
         for (unsigned i = numBlocks; i-- > 1;)
             changed |= iterateForBlock(graph, i);
     } while (changed);
-    
+
     m_valid = true;
 }
 
@@ -103,7 +106,32 @@
     return m_results[i].setAndCheck(m_scratch);
 }
 
+void Dominators::buildIDomRelation(Graph& graph)
+{
+    ASSERT(isValid());
+    unsigned numBlocks = graph.m_blocks.size();
+
+    for (unsigned j = 0; j < numBlocks; ++j)
+    for (size_t i = 0; i < numBlocks; ++i) {
+        if (!m_results[i].get(j)) // i(to), j(from) I need finde j->dominates set
+            continue;
+        m_resultsIDom[i].set(j);
+        m_resultsIDom[j].clear(j);
+    }
+
+    for(unsigned i = 0; i < numBlocks; ++i){
+        if(!graph.m_blocks[i])
+            continue;
+        for(unsigned j=0; j < numBlocks; ++j){
+            if(!graph.m_blocks[j])
+                continue;
+            if(!m_resultsIDom[i].get(j))
+                continue;
+            m_resultsIDom[i].exclude(m_resultsIDom[j]);
+        }
+    }
+}
+
 } } // namespace JSC::DFG
 
 #endif // ENABLE(DFG_JIT)
-
Index: Source/JavaScriptCore/dfg/DFGGraph.cpp
===================================================================
--- Source/JavaScriptCore/dfg/DFGGraph.cpp	(revision 124776)
+++ Source/JavaScriptCore/dfg/DFGGraph.cpp	(working copy)
@@ -320,9 +320,9 @@
             dataLog(" #%lu", static_cast<unsigned long>(i));
         }
         dataLog("\n");
-        dataLog("%s  Dominates:", prefix);
+        dataLog("%s  Immediately Dominates:", prefix);
         for (size_t i = 0; i < m_blocks.size(); ++i) {
-            if (!m_dominators.dominates(blockIndex, i))
+            if (!m_dominators.isIDomChilds(blockIndex,i))
                 continue;
             dataLog(" #%lu", static_cast<unsigned long>(i));
         }
